{"version":3,"sources":["aws-exports.js","helpers/helper.js","components/PostItem.js","components/Home.js","components/Post.js","components/NavBar.js","components/Friends.js","components/Notifications.js","components/Profile.js","actions/rootAction.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["awsmobile","HelperFunctions","getEnvironmentStatus","process","PostItem","props","state","time","moment","this","createdAt","format","className","username","toUpperCase","message","Component","Home","saveUserToDB","URL","name","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","console","log","posts","HelperFunction","getAllPosts","response","setState","reverse","map","post","index","gutter","id","flex","span","style","minWidth","align","_id","TextArea","Input","Post","handleChange","e","target","value","handleSubmit","object","posted","rows","placeholder","onChange","onClick","NavBar","handleSignout","Auth","signOut","theme","selectedKeys","current","mode","Item","key","to","size","HomeOutlined","color","TeamOutlined","BellOutlined","FormOutlined","bottom","ThunderboltOutlined","Friends","Notifications","Profile","loadUserData","dispatch","currentAuthenticatedUser","setUserData","attributes","data","type","preferred_username","email","phone_number","birthdate","Amplify","configure","aws_exports","Layout","Header","Content","Sider","Footer","App","breakpoint","collapsedWidth","width","exact","path","withAuthenticator","connect","actionCreators","signUpConfig","hiddenDefaults","defaultCountryCode","signUpFields","label","required","displayOrder","Boolean","window","location","hostname","match","initState","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d21434ce.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:dfb84f3e-c202-46f4-94a4-92ccf2c54b80\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_w0hR2SGIt\",\n    \"aws_user_pools_web_client_id\": \"4jjmu9ck8722jdpo4vq8lqhflj\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","const HelperFunctions = {\n\n    getEnvironmentStatus: function() {\n        const eVar = process.env.NODE_ENV === 'production' ? `${process.env.REACT_APP_IP}:8080` : 'localhost:8080';\n        return eVar;\n    }\n\n}\n\nexport default HelperFunctions;","import React, { Component } from 'react';\nimport { Avatar } from 'antd';\nimport moment from 'moment';\n\nclass PostItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() { \n        var time = moment(this.props.createdAt).format('LLL')  //'MMMM Do YYYY, h:mm:ss'\n        return (  \n            <div className=\"post-item-container\">\n                <div>\n                    <Avatar>{this.props.username[0].toUpperCase()}</Avatar>\n                </div>\n                <div className=\"post-item-time\">\n                    <h1> {time} </h1>\n                </div>\n                <div className=\"post-item-message\">\n                    <h1> {this.props.message} </h1>\n                </div>\n                <div className=\"post-item-username\">\n                    <h1 className=\"post-item-username\"> @{this.props.username} </h1>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostItem;","import React, { Component } from 'react';\nimport HelperFunction from '../helpers/helper';\nimport PostItem from './PostItem';\nimport { Row, Col } from 'antd';\n\nimport '../App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nexport class Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: [],\n    }\n  }\n\n  componentDidMount() {\n    const URL = HelperFunction.getEnvironmentStatus();\n    this.saveUserToDB(URL);\n    this.getAllPosts(URL);\n    \n  }\n\n  getAllPosts(URL) {\n    fetch(`http://${URL}/post/`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .then(response => this.setState({ posts: response.reverse() }, console.log(response)))\n  }\n\n  saveUserToDB = (URL) => {\n    const { username, name } = this.props;\n    const message = {\n      name: name,\n      username: username\n    }\n    fetch(`http://${URL}/user/${username}`, {\n      method: 'POST',\n      body: JSON.stringify(message),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .catch(err => console.log(err));\n  }\n\n  render() { \n    const { username } = this.props;\n    const { posts } = this.state;\n    return (  \n      <div className=\"home-content\">\n        {posts.map(function(post, index) {\n          return (\n            <Row gutter={[16, 16]} id={`row-${index}`} className=\"home-grid-row\">\n              <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n              <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <PostItem username={post.username} message={post.message} createdAt={post.createdAt} _id={post._id} /> </Col>\n              <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n            </Row>\n          )\n        })}\n      </div>\n    );\n  }\n}  \n\nexport default Home;","import React, { Component } from 'react';\nimport { Input, Button, Row, Col } from 'antd';\nimport HelperFunction from '../helpers/helper';\nimport '../App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nconst { TextArea } = Input;\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      posted: false\n    }\n  } \n\n  handleChange = (e) => {\n    this.setState({ message: e.target.value});\n  }\n\n  handleSubmit = () => {\n    const { message } = this.state;\n    const { username } = this.props;\n    const object = {\n      username: username,\n      message: message\n    }\n    const URL = HelperFunction.getEnvironmentStatus();\n    fetch(`http://${URL}/post/`, {\n      method: 'POST',\n      body: JSON.stringify(object),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .catch(err => console.log(err));\n  }\n\n  render() { \n    return (  \n      <div className=\"app-container\">\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <h1> Whats on your mind? </h1> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <TextArea id=\"text-area\" rows={10} placeholder=\"Username\" onChange={this.handleChange}/> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <Button id=\"submit-button\" onClick={() => {this.handleSubmit()}}> Post </Button> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n      </div>\n    );\n  }\n}  \n\nexport default Post;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport { Menu, Avatar, Modal, AutoComplete, Input } from 'antd';\nimport { UserOutlined, BellOutlined, TeamOutlined, HomeOutlined, FormOutlined, ThunderboltOutlined, SearchOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    handleSignout = () => {\n        Auth.signOut()\n    };\n\n    render() { \n        return (  \n            <div className=\"navbar-container\">\n                <Menu theme=\"dark\" className=\"navbar-menu\" selectedKeys={[this.state.current]} mode={\"vertical\"}>\n                    <Menu.Item className=\"navbar-menu-item-profile\" key=\"profile\"> <Link to=\"/profile\"> <Avatar size={60} className=\"navbar-menu-item-avatar\"></Avatar> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"post\"> <Link to=\"/\"> <HomeOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> HOME </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"friends\"> <Link to=\"/friends\"> <TeamOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> FRIENDS </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"notifications\"> <Link to=\"/notifications\"> <BellOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> NOTIFICATIONS </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"create-post\"> <Link to=\"/create-post\"> <FormOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> POST </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"sign-out\" onClick={this.handleSignout} style={{ bottom: \"-45vh\" }}> <Link to=\"/\"> <ThunderboltOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> SIGN OUT </span> </Link> </Menu.Item>\n                </Menu>\n            </div>\n        );\n    }\n}\n \nexport default NavBar;","import React, { Component } from 'react';\n\nclass Friends extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() { \n        return (  \n            <h1> Friends Page </h1>\n        );\n    }\n}\n \nexport default Friends;","import React, { Component } from 'react';\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() { \n        return (  \n            <h1> Notifications Page </h1>\n        );\n    }\n}\n \nexport default Notifications;","import React, { Component } from 'react';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() { \n        return (  \n            <h1> Profile Page </h1>\n        );\n    }\n}\n \nexport default Profile;","import { Auth } from \"aws-amplify\"\n\nexport function loadUserData(){\n    return(dispatch) => {\n        return Auth.currentAuthenticatedUser()\n        .then((response) => {\n            dispatch(setUserData(response.attributes));\n        })\n    }\n}\n\nexport function setUserData(data) {\n    return {\n        type: \"SET_USER\",\n        username: data.preferred_username,\n        name: data.name,\n        email: data.email,\n        phone_number: data.phone_number,\n        birthdate: data.birthdate\n    }\n}","import React, { Component } from 'react';\nimport Amplify from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { Layout, Menu, Input, Button } from 'antd';\nimport aws_exports from './aws-exports';\nimport Home from './components/Home';\nimport Post from './components/Post';\nimport NavBar from './components/NavBar';\nimport Friends from './components/Friends';\nimport Notifications from './components/Notifications';\nimport Profile from './components/Profile';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './actions/rootAction';\n\nimport './App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nAmplify.configure(aws_exports);\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst signUpConfig = {\n  hiddenDefaults: [\"username\"],\n  defaultCountryCode: '1',\n  signUpFields: [\n    {\n      label: \"Name\",\n      key: 'name',\n      required: true,\n      displayOrder: 1,\n      type: 'string'\n    },\n    {\n      label: \"Username\",\n      key: 'preferred_username',\n      required: true,\n      displayOrder: 2,\n      type: 'string'\n    },\n    {\n      label: \"Data of Birth\",\n      key: 'birthdate',\n      required: true,\n      displayOrder: 3,\n      type: 'date'\n    }\n  ]\n}\n\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n  }\n  \n  componentDidMount() {\n    this.props.loadUserData();\n  }\n\n  render() { \n    return (  \n      <div className=\"app-container\">\n        <Router>\n            <Layout className=\"app-content\">\n              <Sider breakpoint=\"lg\" collapsedWidth=\"auto\" className=\"sider-navbar\" theme=\"dark\" width={200}>\n                  <NavBar {...this.props} />\n              </Sider>\n              <Layout className=\"app-center-content\">\n                <Layout>\n                  <Content>\n                    <Switch>\n                      <Route exact path=\"/\"><Home {...this.props} /></Route>\n                      <Route exact path=\"/friends\"><Friends /></Route>\n                      <Route exact path=\"/profile\"><Profile /></Route>\n                      <Route exact path=\"/notifications\"><Notifications /></Route>\n                      <Route exact path=\"/create-post\"><Post {...this.props} /></Route>\n                      <Route exact path=\"/u/:username\"><Home /></Route>\n                    </Switch>\n                  </Content>\n                </Layout>\n              </Layout>\n            </Layout>\n          </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\n\n// export default withAuthenticator(App, { signUpConfig });\nexport default withAuthenticator(connect(mapStateToProps, actionCreators)(App), {signUpConfig});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    username: '',\n    name: '',\n    email: '',\n    phone_number: '',\n    birthdate: ''\n}\n\nconst rootReducer = (state = initState, action) => {\n    if(action.type === \"SET_USER\") {\n        return {\n            ...state,\n            username: action.username,\n            name: action.name,\n            email: action.email,\n            phone_number: action.phone_number,\n            birthdate: action.birthdate,\n        }\n    } else {\n        return {\n            ...state \n        }\n    }\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}