{"version":3,"sources":["images/stormtrooper.jpg","aws-exports.js","helpers/helper.js","components/PostItem.js","components/Home.js","components/Post.js","components/NavBar.js","components/Friends.js","components/Notifications.js","components/Profile.js","components/EditProfile.js","actions/rootAction.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","awsmobile","HelperFunctions","getEnvironmentStatus","process","getCurrentUser","a","Auth","currentAuthenticatedUser","PostItem","props","getUserProfilePicture","API","fetch","username","method","headers","then","res","json","resp","setState","profilePicture","catch","err","console","log","state","this","time","moment","createdAt","format","className","src","toUpperCase","message","Component","Home","saveUserToDB","URL","name","body","JSON","stringify","posts","HelperFunction","loadUserData","getAllPosts","response","map","post","index","gutter","id","flex","span","align","style","minWidth","_id","TextArea","Input","Post","handleChange","e","target","value","handleSubmit","object","posted","rows","placeholder","onChange","onClick","NavBar","handleSignout","signOut","user","theme","selectedKeys","current","mode","Item","key","title","to","size","HomeOutlined","color","TeamOutlined","BellOutlined","FormOutlined","bottom","ThunderboltOutlined","Friends","Notifications","Profile","getUserPosts","getUserInformation","undefined","following","indicator","LoadingOutlined","fontSize","spin","backgroundImage","profileCover","length","followers","EditProfile","fieldsComplete","dob","pp","pC","handleName","handleDate","String","_d","handleProfilePicture","params","files","type","pos","indexOf","substring","ppType","handleProfileCover","pCType","ppURL","pCURL","config","bucketName","region","accessKeyId","secretAccessKey","s3Url","profilepicURL","profilecoverURL","Client","S3","uploadFile","handleSaveToDatabase","done","data","finished","image","envVar","envState","accept","disabled","fileType","dispatch","setUserData","attributes","preferred_username","email","phone_number","birthdate","Amplify","configure","aws_exports","Layout","Header","Content","Sider","Footer","App","breakpoint","collapsedWidth","width","exact","path","withAuthenticator","connect","actionCreators","signUpConfig","hiddenDefaults","defaultCountryCode","signUpFields","label","required","displayOrder","Boolean","window","location","hostname","match","initState","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a03116d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stormtrooper.99502bbd.jpg\";","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:dfb84f3e-c202-46f4-94a4-92ccf2c54b80\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_w0hR2SGIt\",\n    \"aws_user_pools_web_client_id\": \"4jjmu9ck8722jdpo4vq8lqhflj\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import { Auth } from 'aws-amplify';\n\nconst HelperFunctions = {\n\n    getEnvironmentStatus: function() {\n        const eVar = process.env.NODE_ENV === 'production' ? `${process.env.REACT_APP_IP}:8080` : 'localhost:8080';\n        return eVar;\n    },\n\n    getCurrentUser: async function() {\n        return Auth.currentAuthenticatedUser()\n    }\n\n}\n\nexport default HelperFunctions;","import React, { Component } from 'react';\nimport HelperFunctions from '../helpers/helper'\nimport { Avatar } from 'antd';\nimport moment from 'moment';\n\nclass PostItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profilePicture: ''\n        }\n    }\n\n    async componentDidMount() {\n        await this.getUserProfilePicture();\n    }\n\n    getUserProfilePicture = async () => {\n        const API = HelperFunctions.getEnvironmentStatus();\n        await fetch(`http://${API}/user/profile-images/${this.props.username}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n          })\n          .then((res) => res.json())\n          .then((resp) => this.setState({ profilePicture: resp.profilePicture}))\n          .catch(err => console.log(err))\n    }\n\n    render() { \n        var time = moment(this.props.createdAt).format('LLL')  //'MMMM Do YYYY, h:mm:ss'\n        return (  \n            <div className=\"post-item-container\">\n                <div>\n                    <Avatar src={this.state.profilePicture}>{this.props.username[0].toUpperCase()}</Avatar>\n                </div>\n                <div className=\"post-item-time\">\n                    <h1> {time} </h1>\n                </div>\n                <div className=\"post-item-message\">\n                    <h1> {this.props.message} </h1>\n                </div>\n                <div className=\"post-item-username\">\n                    <h1 className=\"post-item-username\"> @{this.props.username} </h1>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default PostItem;","import React, { Component } from 'react';\nimport HelperFunction from '../helpers/helper';\nimport PostItem from './PostItem';\nimport { Row, Col } from 'antd';\n\nimport '../App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nexport class Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: [],\n    }\n  }\n\n  async componentDidMount() {\n    const URL = HelperFunction.getEnvironmentStatus();\n    await this.props.loadUserData()\n    this.saveUserToDB(URL);\n    this.getAllPosts(URL);\n    \n  }\n\n  getAllPosts(URL) {\n    fetch(`http://${URL}/post/`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .then(response => this.setState({ posts: response }))\n  }\n\n  saveUserToDB = (URL) => {\n    const { username, name } = this.props;\n    const message = {\n      name: name,\n      username: username\n    }\n    fetch(`http://${URL}/user/${username}`, {\n      method: 'POST',\n      body: JSON.stringify(message),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .catch(err => console.log(err));\n  }\n\n  render() { \n    const { username } = this.props;\n    const { posts } = this.state;\n    return (  \n      <div className=\"home-content\">\n        {posts.map(function(post, index) {\n          return (\n            <Row gutter={[16, 16]} id={`row-${index}`} className=\"home-grid-row\">\n              <Col flex=\"auto\" span={8} className=\"home-grid-col grid-col-min\" />\n              <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <PostItem username={post.username} message={post.message} createdAt={post.createdAt} _id={post._id} /> </Col>\n              <Col flex=\"auto\" span={8} className=\"home-grid-col grid-col-min\" />\n            </Row>\n          )\n        })}\n      </div>\n    );\n  }\n}  \n\nexport default Home;","import React, { Component } from 'react';\nimport { Input, Button, Row, Col } from 'antd';\nimport HelperFunction from '../helpers/helper';\nimport '../App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nconst { TextArea } = Input;\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      posted: false\n    }\n  } \n\n  handleChange = (e) => {\n    this.setState({ message: e.target.value});\n  }\n\n  handleSubmit = () => {\n    const { message } = this.state;\n    const { username } = this.props;\n    const object = {\n      username: username,\n      message: message\n    }\n    const URL = HelperFunction.getEnvironmentStatus();\n    fetch(`http://${URL}/post/`, {\n      method: 'POST',\n      body: JSON.stringify(object),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then((res) => res.json())\n    .catch(err => console.log(err));\n  }\n\n  render() { \n    return (  \n      <div className=\"app-container\">\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <h1> Whats on your mind? </h1> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <TextArea id=\"text-area\" rows={10} placeholder=\"Username\" onChange={this.handleChange}/> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n        <Row gutter={[16, 16]} className=\"home-grid-row\">\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n          <Col flex=\"500px\" align=\"middle\" span={8} className=\"home-grid-col\" style={{ minWidth: \"300px\" }}> <Button id=\"submit-button\" onClick={() => {this.handleSubmit()}}> Post </Button> </Col>\n          <Col flex=\"auto\" span={8} className=\"home-grid-col\" style={{ minWidth: \"0px\" }}/>\n        </Row>\n      </div>\n    );\n  }\n}  \n\nexport default Post;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport HelperFunctions from '../helpers/helper';\nimport { Menu, Avatar, Modal, AutoComplete, Input } from 'antd';\nimport { UserOutlined, BellOutlined, TeamOutlined, HomeOutlined, FormOutlined, ThunderboltOutlined, SearchOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profilePicture: ''\n        }\n    }\n\n    async componentDidMount() {        \n        var user = await HelperFunctions.getCurrentUser();\n        await this.getUserProfilePicture(user.username);\n    }\n\n    handleSignout = () => {\n        Auth.signOut()\n    };\n\n    getUserProfilePicture = async (user) => {\n        const API = HelperFunctions.getEnvironmentStatus();\n        await fetch(`http://${API}/user/profile-images/${user}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n          })\n          .then((res) => res.json())\n          .then((resp) => this.setState({ profilePicture: resp.profilePicture}))\n          .catch(err => console.log(err))\n    }\n\n    render() { \n        return (  \n            <div className=\"navbar-container\">\n                <Menu theme=\"dark\" className=\"navbar-menu\" selectedKeys={[this.state.current]} mode={\"vertical\"}>\n                    <Menu.Item className=\"navbar-menu-item-profile\" key=\"profile\" title={<span> PROFILE </span>}> <Link to=\"/profile\"> <Avatar size={60} src={this.state.profilePicture} className=\"navbar-menu-item-avatar\" />  </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"post\"> <Link to=\"/\"> <HomeOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> HOME </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"friends\"> <Link to=\"/friends\"> <TeamOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> FRIENDS </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"notifications\"> <Link to=\"/notifications\"> <BellOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> NOTIFICATIONS </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"create-post\"> <Link to=\"/create-post\"> <FormOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> POST </span> </Link> </Menu.Item>\n                    <Menu.Item className=\"navbar-menu-item\" key=\"sign-out\" onClick={this.handleSignout} style={{ bottom: \"-45vh\" }}> <Link to=\"/\"> <ThunderboltOutlined style={{ color: \"white\" }}/> <span className=\"navbar-title\"> SIGN OUT </span> </Link> </Menu.Item>\n                </Menu>\n            </div>\n        );\n    }\n}\n \nexport default NavBar;","import React, { Component } from 'react';\n\nclass Friends extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() { \n        return (  \n            <h1> Friends Page </h1>\n        );\n    }\n}\n \nexport default Friends;","import React, { Component } from 'react';\n\nclass Notifications extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() { \n        return (  \n            <h1> Notifications Page </h1>\n        );\n    }\n}\n \nexport default Notifications;","import React, { Component } from 'react';\nimport { Row, Col, Avatar, Descriptions, Spin, Button } from 'antd';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport background from '../images/stormtrooper.jpg';\nimport HelperFunctions from '../helpers/helper';\nimport PostItem from '../components/PostItem';\n\n\nimport '../App.css';\nimport 'antd/dist/antd.css';\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            user: []\n        }\n    }\n\n    async componentDidMount() {\n        var user = await HelperFunctions.getCurrentUser();\n        const API = HelperFunctions.getEnvironmentStatus();\n        await this.getUserPosts(API, user.username);\n        await this.getUserInformation(API, user.username);\n    }\n\n\n    getUserPosts(API, user) {\n        fetch(`http://${API}/post/${user}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n          })\n        .then(response => response.json())\n        .then((res) => this.setState({ posts: res }))\n        .catch((err) => console.log(err));\n    }\n    \n    getUserInformation(API, user) {\n        fetch(`http://${API}/user/${user}`)\n        .then((res) => res.json())\n        .then((resp) => this.setState({ user: resp[0] }))\n        .catch((err) => console.log(err));\n    }\n\n    render() { \n        const { user, posts } = this.state;\n        console.log(posts);\n        var time = moment(user.createdAt).format('LLL');\n        return (  \n            user.following === undefined ? \n            <div className=\"app-container\">\n                <Spin className=\"loading\" indicator={<LoadingOutlined style={{ fontSize: 240 }} spin />} />\n            </div>\n            :\n            <div className=\"profile-container\">\n                <div className=\"profile-banner\">\n                    <div className=\"profile-banner-image\" style={{ backgroundImage: `url(${user.profileCover})`}} />\n                    <div className=\"profile-banner-avatar\">\n                        <Avatar size={200} src={`${user.profilePicture}`}>M</Avatar>\n                    </div>\n                    \n                </div> \n                <div className=\"profile-data\">\n                        <Descriptions>\n                            <Descriptions.Item> <h1> Name: {user.name} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <h1> Username: {user.username} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <h1>Posts: {posts.length} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <h1>Followers: {user.followers === undefined ? 'loading' : user.followers.length} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <h1>Following: {user.following === undefined ? 'loading' : user.following.length} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <h1>Date Joined: {time} </h1> </Descriptions.Item>\n                            <Descriptions.Item> <Button> <Link to=\"/profile/edit\"> Edit Profile </Link></Button> </Descriptions.Item>\n                        </Descriptions>\n                    </div>\n                <div className=\"profile-grid\">\n                    {posts.map(function(post, index) {\n                        return (\n                            <Row gutter={[16, 16]} id={`row-${index}`} className=\"profile-grid-row\">\n                                <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                                <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> <PostItem username={post.username} message={post.message} createdAt={post.createdAt} _id={post._id} /> </Col>\n                                <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                            </Row>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Profile;\n","import React, { Component } from 'react';\nimport S3 from 'react-aws-s3';\nimport HelperFunctions from '../helpers/helper'\nimport moment from 'moment';\nimport { Row, Col, Input, Avatar, Descriptions, Spin, Button, DatePicker } from 'antd';\n\n\n\nclass EditProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            dob: '',\n            image: '',\n            backgroundImage: '',\n            pp: [],\n            ppType: '',\n            ppURL: '',\n            pC: [],\n            pCType: '',\n            pCURL: ''\n        }\n    }\n\n\n\n    componentDidMount() {\n        var envVar = HelperFunctions.getEnvironmentStatus();\n        this.setState({ envState: envVar })\n    }\n\n    fieldsComplete = () => {\n        const { dob, pp, pC } =  this.state;\n        return pp.length === 0 && pC.length === 0 && dob.length === 0;\n    } \n\n    handleName = e => {\n        this.setState({ name: e.target.value })\n    } \n\n    handleDate = e => {\n        var time = e === null ? \"null\" : moment(String(e._d)).format('L')\n        console.log(time);\n    } \n\n    handleProfilePicture = e => {\n        var params = String(e.target.files[0].type);\n        var pos = params.indexOf('/');\n        var type = params.substring(pos + 1);\n        this.setState({ pp: e.target.files[0], ppType: type }, console.log(e.target.files[0]));\n    }\n\n    handleProfileCover = e => {\n        var params = String(e.target.files[0].type);\n        var pos = params.indexOf('/');\n        var type = params.substring(pos + 1);\n        this.setState({ pC: e.target.files[0], pCType: type });\n    }\n\n    handleSubmit = async () => {\n        const { pp, ppType, ppURL, pC, pCType, pCURL } = this.state;\n        console.log(this.state);\n        const config = {\n            bucketName: process.env.REACT_APP_BUCKET_NAME,\n            region: process.env.REACT_APP_BUCKET_REGION,\n            accessKeyId: process.env.REACT_APP_S3_KEY,\n            secretAccessKey: process.env.REACT_APP_S3_SECRET,\n            s3Url: `https://s3.${process.env.REACT_APP_BUCKET_REGION}.amazonaws.com/${process.env.REACT_APP_BUCKET_NAME}`\n        }\n\n        var profilepicURL = this.state.pp.length > 0 ? '' : config.s3Url + `/profile-picture-${this.props.username}.${ppType}`;\n        var profilecoverURL = this.state.pC.length > 0 ? '' : config.s3Url + `/profile-cover-${this.props.username}.${pCType}`;\n        console.log(profilepicURL);\n        console.log(profilecoverURL);\n\n        const Client = new S3(config);\n        if(profilepicURL !== '') {\n            console.log(\"Saving Profile Picture\");\n            await Client.uploadFile(pp, `profile-picture-${this.props.username}`)\n            .then((res) => res.json())\n            .then((resp) => console.log(resp))\n            .catch(err => console.log(err));\n            this.setState({ ppURL: profilepicURL });\n        }\n        if(profilecoverURL !== '') {\n            console.log(\"Saving Cover Photo\");\n            await Client.uploadFile(pC, `profile-cover-${this.props.username}`)\n            .then((res) => res.json())\n            .then((resp) => console.log(resp))\n            .catch(err => console.log(err));\n            this.setState({ pCURL: profilecoverURL });\n        }\n\n        console.log(\"Done Saving Images\");\n        var done = await this.handleSaveToDatabase(profilepicURL, profilecoverURL);\n        console.log(done);\n    }\n    \n\n    handleSaveToDatabase = (profilepicURL, profilecoverURL) => {\n        console.log(\"Saving to Database\");\n        // const { pp, ppType, ppURL, pC, pCType, pCURL } = this.state;\n        const URL = HelperFunctions.getEnvironmentStatus();\n        const data = {\n            \"ppURL\": profilepicURL,\n            \"pCURL\": profilecoverURL,\n        }\n        console.log(data);\n        const API= `http://${URL}/user/update/${this.props.username}`;\n        fetch(API, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then((res) => res.json())\n        .then((resp) => resp.length > 0 ? this.setState({ finished: true }) : this.setState({ finished: false }))\n        .catch((err) => console.log(err));\n    }\n\n    render() { \n        const dateFormat = \"MM/DD/YYYY\";\n        return (  \n            <div className=\"edit-profile-container\">\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> <h1> Edit Profile </h1> </Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> <Input placeholder=\"Name\" onChange={this.handleName}/> </Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> <DatePicker onChange={this.handleDate} format={dateFormat} /></Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> \n                        <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={this.handleProfilePicture} />\n                    </Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> \n                        <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={this.handleProfileCover} />\n                    </Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <Row gutter={[16, 16]} className=\"profile-grid-row\">\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                    <Col flex=\"500px\" align=\"middle\" span={8} className=\"profile-grid-col\" style={{ minWidth: \"300px\" }}> \n                        <Button onClick={this.handleSubmit} disabled={this.fieldsComplete()}> Submit </Button>\n                    </Col>\n                    <Col flex=\"auto\" span={8} className=\"profile-grid-col grid-col-min\" />\n                </Row>\n                <h1> HELLO </h1>\n                {this.state.fileType}\n            </div>\n        );\n    }\n}\n \nexport default EditProfile;","import { Auth } from \"aws-amplify\"\n\nexport function loadUserData(){\n    return(dispatch) => {\n        return Auth.currentAuthenticatedUser()\n        .then((response) => {\n            dispatch(setUserData(response.attributes));\n        })\n    }\n}\n\nexport function setUserData(data) {\n    return {\n        type: \"SET_USER\",\n        username: data.preferred_username,\n        name: data.name,\n        email: data.email,\n        phone_number: data.phone_number,\n        birthdate: data.birthdate\n    }\n}","import React, { Component } from 'react';\nimport Amplify from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { Layout, Menu, Input, Button } from 'antd';\nimport aws_exports from './aws-exports';\nimport Home from './components/Home';\nimport Post from './components/Post';\nimport NavBar from './components/NavBar';\nimport Friends from './components/Friends';\nimport Notifications from './components/Notifications';\nimport Profile from './components/Profile';\nimport EditProfile from './components/EditProfile';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './actions/rootAction';\n\nimport './App.css';\nimport '@aws-amplify/ui/dist/style.css';\nimport 'antd/dist/antd.css';\n\nAmplify.configure(aws_exports);\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst signUpConfig = {\n  hiddenDefaults: [\"username\"],\n  defaultCountryCode: '1',\n  signUpFields: [\n    {\n      label: \"Name\",\n      key: 'name',\n      required: true,\n      displayOrder: 1,\n      type: 'string'\n    },\n    {\n      label: \"Username\",\n      key: 'preferred_username',\n      required: true,\n      displayOrder: 2,\n      type: 'string'\n    },\n    {\n      label: \"Data of Birth\",\n      key: 'birthdate',\n      required: true,\n      displayOrder: 3,\n      type: 'date'\n    }\n  ]\n}\n\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n  }\n  \n  componentDidMount() {\n    this.props.loadUserData();\n  }\n\n  render() { \n    return (  \n      <div className=\"app-container\">\n        <Router>\n            <Layout className=\"app-content\">\n              <Sider breakpoint=\"lg\" collapsedWidth=\"auto\" className=\"sider-navbar\" theme=\"dark\" width={200}>\n                  <NavBar {...this.props} />\n              </Sider>\n              <Layout className=\"app-center-content\">\n                <Layout>\n                  <Content>\n                    <Switch>\n                      <Route exact path=\"/\"><Home {...this.props} /></Route>\n                      <Route exact path=\"/friends\"><Friends {...this.props} /></Route>\n                      <Route exact path=\"/profile\"><Profile {...this.props} /></Route>\n                      <Route exact path=\"/profile/edit\"><EditProfile {...this.props} /></Route>\n                      <Route exact path=\"/notifications\"><Notifications {...this.props} /></Route>\n                      <Route exact path=\"/create-post\"><Post {...this.props} /></Route>\n                      <Route exact path=\"/u/:username\"><Home {...this.props} /></Route>\n                    </Switch>\n                  </Content>\n                </Layout>\n              </Layout>\n            </Layout>\n          </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\n\n// export default withAuthenticator(App, { signUpConfig });\nexport default withAuthenticator(connect(mapStateToProps, actionCreators)(App), {signUpConfig});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    username: '',\n    name: '',\n    email: '',\n    phone_number: '',\n    birthdate: ''\n}\n\nconst rootReducer = (state = initState, action) => {\n    if(action.type === \"SET_USER\") {\n        return {\n            ...state,\n            username: action.username,\n            name: action.name,\n            email: action.email,\n            phone_number: action.phone_number,\n            birthdate: action.birthdate,\n        }\n    } else {\n        return {\n            ...state \n        }\n    }\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}